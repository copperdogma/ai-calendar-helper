# App
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME="{{YOUR_APP_TITLE}}"
NEXT_PUBLIC_APP_SHORT_NAME="{{YOUR_APP_SHORT_NAME}}"
NEXT_PUBLIC_APP_DESCRIPTION="{{YOUR_PROJECT_DESCRIPTION}}"

# Flag for E2E testing environment (client-side)
# NEXT_PUBLIC_IS_E2E_TEST_ENV=false

# Firebase Configuration
NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_project.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_sender_id
NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id

# Firebase Emulator Settings
# Optional: Set to true to connect BOTH client & server SDKs to Firebase Emulators
NEXT_PUBLIC_USE_FIREBASE_EMULATOR=false 

# Firebase Auth Emulator - Client SDK (Browser)
NEXT_PUBLIC_FIREBASE_AUTH_EMULATOR_HOST=localhost:9099
# Firebase Auth Emulator - Admin SDK (Server)
FIREBASE_AUTH_EMULATOR_HOST=localhost:9099

# Firebase Admin SDK
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_CLIENT_EMAIL=your_client_email
# For FIREBASE_PRIVATE_KEY: Ensure to replace actual newlines with '\\n' if pasting as a single line,
# OR ensure the variable spans multiple lines correctly as provided by Firebase, enclosed in double quotes.
# Example of a single-line key with escaped newlines: "YOUR_KEY_PART_1\\nYOUR_KEY_PART_2\\n..."
# Example of a multi-line key (ensure your .env parser supports this, often requires double quotes around the whole value):
# FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_KEY_PART_1\nYOUR_KEY_PART_2\n-----END PRIVATE KEY-----\n"
FIREBASE_PRIVATE_KEY=your_private_key


# API Configuration

# API Configuration
API_URL=http://localhost:3000/api
API_SECRET_KEY=your_api_secret_key

# Optional: Analytics and Monitoring
NEXT_PUBLIC_ANALYTICS_ID=your_analytics_id
SENTRY_DSN=your_sentry_dsn

# --- Primary Database Connection URL ---
# Prisma and other parts of the application will use this URL.
# Choose ONE format appropriate for your environment (Development, Production Direct, Production Pooled).

# Format for Development (Direct connection to local DB)
# Replace {{YOUR_DATABASE_NAME}} with your actual development database name.
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/{{YOUR_DATABASE_NAME}}?schema=public"

# --- Alternative Formats (Commented Out Examples) ---

# Format for Production (Direct Connection)
# Use this if connecting directly to your production database instance.
# Replace user, password, your-production-host, and {{YOUR_DATABASE_NAME}}_prod.
# Consider adding connection pool settings like ?connection_limit=10 for better performance.
# DATABASE_URL="postgresql://user:password@your-production-host:5432/{{YOUR_DATABASE_NAME}}_prod?schema=public"

# Format for Production (Connection Pooling, e.g., PgBouncer)
# Use this when connecting through a connection pooler. Recommended for scalability, especially in serverless environments.
# Replace user, password, your-pooler-host, and {{YOUR_DATABASE_NAME}}_prod.
# The `pgbouncer=true` parameter is often required for Prisma compatibility with PgBouncer.
# Adjust `connection_limit` based on your pooler/environment constraints (e.g., `connection_limit=1` for serverless).
# DATABASE_URL="postgresql://user:password@your-pooler-host:6432/{{YOUR_DATABASE_NAME}}_prod?schema=public&pgbouncer=true&connection_limit=1"

# --- Test Database URL ---
# Separate URL used specifically during automated testing to avoid interfering with development data.
# Replace {{YOUR_DATABASE_NAME}}_test with your actual test database name.
TEST_DATABASE_URL="postgresql://postgres:postgres@localhost:5432/{{YOUR_DATABASE_NAME}}_test?schema=public"

# --- Individual Database Connection Details ---
# These variables might be used by tools that don't accept a full DATABASE_URL or for constructing the URL dynamically.
# Generally, prefer setting the appropriate DATABASE_URL above.
POSTGRES_USER=your_db_user
POSTGRES_PASSWORD=your_db_password
POSTGRES_DB={{YOUR_DATABASE_NAME}} # Should typically match the DB name in your chosen DATABASE_URL
POSTGRES_HOST=localhost            # Should typically match the host in your chosen DATABASE_URL
POSTGRES_PORT=5432                 # Should typically match the port in your chosen DATABASE_URL

# --- Prisma Debugging ---
# Set to "true" to enable detailed logging of Prisma database queries. Useful for development/troubleshooting.
# DEBUG_PRISMA=false


# NextAuth.js Configuration
# Generate a secret: openssl rand -base64 32
NEXTAUTH_SECRET=your_strong_nextauth_secret_here
NEXTAUTH_URL=http://localhost:3000

# Google OAuth credentials
GOOGLE_CLIENT_ID=your_google_client_id  
GOOGLE_CLIENT_SECRET=your_google_client_secret

# Logging (Optional)
# Controls the minimum level of logs to output (e.g., trace, debug, info, warn, error, fatal)
# Defaults to 'info' if not set.
# LOG_LEVEL=debug

# -----------------------------------------------------------------------------
# Redis Configuration (Optional, for caching, rate limiting, etc.)
# -----------------------------------------------------------------------------
# Connection string for your Redis instance. Required for features like rate limiting.
# Example: redis://localhost:6379 or redis://:yourpassword@yourhost:yourport
REDIS_URL=

# Optional: Rate limiting settings for user registration endpoint
# Defaults are defined in lib/env.ts if not set here.
# RATE_LIMIT_REGISTER_MAX_ATTEMPTS=10
# RATE_LIMIT_REGISTER_WINDOW_SECONDS=3600 # 1 hour

# Any other environment variables below... 
