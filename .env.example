# ==============================================================================
# Application Configuration
# ==============================================================================
NODE_ENV=development
# Publicly accessible URL of your application.
# Used for absolute URLs, OAuth redirects, and metadataBase.
NEXT_PUBLIC_APP_URL=http://localhost:3000
# For display purposes, e.g., in the browser tab or app header.
NEXT_PUBLIC_APP_NAME="NextAuth PostgreSQL Template"
NEXT_PUBLIC_APP_SHORT_NAME="NextAuth-PSQL"
NEXT_PUBLIC_APP_DESCRIPTION="A modern Next.js template with NextAuth.js and PostgreSQL integration"

# ==============================================================================
# NextAuth.js Configuration
# ==============================================================================
# A random string used to hash tokens, sign cookies, and generate cryptographic keys.
# Generate one using: openssl rand -base64 32
NEXTAUTH_SECRET="YOUR_NEXTAUTH_SECRET"

# The canonical URL of your NextAuth.js instance.
# For local development, it's often http://localhost:3000.
# In production, set this to your application's public URL.
# This is used for OAuth callback URLs.
NEXTAUTH_URL="http://localhost:3000"

# ==============================================================================
# Google OAuth Credentials
# ==============================================================================
# Obtain these from Google Cloud Console: https://console.cloud.google.com/apis/credentials
# Create OAuth 2.0 Client ID with authorized redirect URIs including:
# http://localhost:3000/api/auth/callback/google (for local development)
# https://your-production-url.com/api/auth/callback/google (for production)
GOOGLE_CLIENT_ID="YOUR_GOOGLE_CLIENT_ID"
GOOGLE_CLIENT_SECRET="YOUR_GOOGLE_CLIENT_SECRET"

# ==============================================================================
# Database Configuration (PostgreSQL)
# ==============================================================================
# Connection string for your PostgreSQL database.
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
# Example for local development:
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/nextauth_psql_dev?schema=public"

# Example for a test database (used by automated tests):
# TEST_DATABASE_URL="postgresql://postgres:postgres@localhost:5432/nextauth_psql_test?schema=public"

# ==============================================================================
# Redis Configuration (Optional)
# ==============================================================================
# Connection string for your Redis instance.
# Required if you want to use Redis-based rate limiting or caching.
# Leave blank to disable Redis-dependent features (they may fall back to in-memory or be disabled).
# Example: REDIS_URL="redis://localhost:6379"
REDIS_URL=""

# Rate Limiting (used if REDIS_URL is set and ENABLE_REDIS_RATE_LIMITING is true)
# Maximum number of registration attempts per IP address within the window.
RATE_LIMIT_REGISTER_MAX_ATTEMPTS="10"
# Time window in seconds for registration rate limiting.
RATE_LIMIT_REGISTER_WINDOW_SECONDS="3600" # 1 hour
# Set to "true" to enable Redis-based rate limiting, "false" to disable.
# If REDIS_URL is not set, this may have no effect or features might use in-memory alternatives.
ENABLE_REDIS_RATE_LIMITING="true"

# ==============================================================================
# Test User Configuration (Optional)
# ==============================================================================
# These credentials can be used by E2E tests or for a default login during development.
TEST_USER_EMAIL="test@example.com"
TEST_USER_PASSWORD="Test123!"
TEST_USER_DISPLAY_NAME="Test User" 

# ==============================================================================
# Logging Configuration (Optional)
# ==============================================================================
# Controls the minimum level of logs to output (e.g., fatal, error, warn, info, debug, trace, silent)
LOG_LEVEL="info"
# Set to "true" to enable pino-pretty for human-readable logs in local development.
PRETTY_LOGS="true"

# ==============================================================================
# E2E Test Environment Settings (Playwright, etc.)
# ==============================================================================
# Flag for E2E testing environment (client-side)
# NEXT_PUBLIC_IS_E2E_TEST_ENV="false"

# Test port settings (helpful when running tests alongside dev server)
# PORT=3777
# PLAYWRIGHT_TEST_BASE_URL="http://localhost:3777"

# Test timeout settings (in milliseconds)
# TIMEOUT_TEST=30000
# TIMEOUT_NAVIGATION=60000
# TIMEOUT_ACTION=30000
# TIMEOUT_SERVER=60000

# Test run configuration
# RUN_PARALLEL=false
# RETRY_COUNT=1
# WORKERS=1

# ==============================================================================
# Example Production Environment Variables
# ==============================================================================
# Uncomment and configure these for production deployments:

# NODE_ENV=production
# NEXT_PUBLIC_APP_URL=https://your-production-domain.com
# NEXTAUTH_URL=https://your-production-domain.com

# For high-availability production deployments:
# DATABASE_URL="postgresql://USER:PASSWORD@production-db-host:5432/production_db?schema=public&connection_limit=20&pool_timeout=10"
# REDIS_URL="redis://username:password@production-redis-host:6379"